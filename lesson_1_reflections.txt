1-How did viewing a diff between two versions of a file help you see the bug that was introduced?

It is difficult to compare files individually. Tools that find differences (such
as FC in windows) make things easier, as they focus our attention on what really
matters: changes.

2-How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

It makes it easier to roll back updates that did not work. It allows you to test
changes in the code with reduced risk.

3-What do you think are the pros and cons of manually choosing when to create a commit, like you 
do in Git, vs having versions automatically saved, like Google Docs does?

Pros: every commit has meaning; you don't waste space on useless commits.
Cons: you may forget some commits.

4-Why do you think some version control systems, like Git, allow saving multiple files in one commit,
while others, like Google Docs, treat each file separately?

Because their are designed for different purposes.

5-How can you use the commands git log and git diff to view the history of files?

With git log you can find the id and brief description every commit. Then, with that info and
git diff, you can compare commits.

6-How might using version control make you more confident to make changes that could break something?

By providing an easy way to revert changes and to locate when the bug was introduced.